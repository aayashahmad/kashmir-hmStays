{"version":3,"file":"react-hamburger-menus.esm.js","sources":["../src/hooks/useOffset.ts","../src/utils/index.ts","../src/components/GhostButton/GhostButton.tsx","../src/components/GhostNavbar/GhostNavbar.tsx","../src/hooks/useMedia.tsx","../src/hooks/useToggle.tsx","../src/components/ResponsiveNavbar/ResponsiveNavbar.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nexport function HandleOutsideClick(ref: React.RefObject<HTMLInputElement>, setChecked: any) {\n  useEffect(() => {\n    function handleClickEvent(event: any) {\n      if (ref.current && !ref.current.contains(event.target))\n        setChecked(false);\n    }\n\n    document.addEventListener('mousedown', handleClickEvent);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickEvent);\n    };\n  }, [ref]);\n}\n","export const amplifyString = (\n  property: string | number | undefined,\n  defaultV: string,\n  addr: string\n) => {\n  if (property)\n    return typeof property === 'string' ? property : property + addr;\n\n  return defaultV;\n};\n","import React, { HTMLAttributes, ReactNode, useRef, useState } from 'react';\nimport { HandleOutsideClick } from '../../hooks/useOffset';\nimport { amplifyString } from \"../../utils\";\nimport './style.css';\n\ninterface Styles {\n  navigation?: React.CSSProperties;\n  navigationButton?: React.CSSProperties;\n  navigationIcon?: React.CSSProperties;\n  navigationCard?: React.CSSProperties;\n}\n\nexport interface GhostButtonProps extends HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n  styles?: Styles;\n  className?: string;\n  id?: string;\n  icon?: ReactNode;\n  sticky?:boolean;\n\n\n  floatButtonSize?: string;\n  floatButtonX?: number;\n  floatButtonY?: number;\n  fontColor?: string;\n  fontSize?: string | number;\n  listHoverColor?: string;\n\n  iconColor?: string;\n  iconWidth?: string | number;\n  iconHeight?: string | number;\n\n  zIndex?:number\n}\n\nconst defaultStyles = {\n  floatButtonX: 90,\n  floatButtonY: 2,\n};\n\nexport const GhostButton = (\n  props: GhostButtonProps = { ...defaultStyles }\n) => {\n  const { children, styles, className, id, icon, sticky } = props;\n\n  const [checked, setChecked] = useState(false);\n  const ref = useRef(null);\n\n  HandleOutsideClick(ref, setChecked);\n\n\n  const iconWidth = amplifyString(props?.iconWidth, '2.6em', 'px');\n  const iconHeight = amplifyString(props?.iconHeight, '2px', 'px');\n  const fontSize = amplifyString(props?.fontSize, '1em', 'px');\n\n  var cssVariables = {\n    '--gb-floatButtonSize': props?.floatButtonSize ?? 6,\n    '--gb-fontColor': props?.fontColor ?? 'black',\n    '--gb-fontSize': fontSize,\n    '--gb-listHoverColor':\n    props?.listHoverColor ?? 'rgba(127, 255, 212, 0.157)',\n    '--gb-icon-color': props?.iconColor ?? 'black',\n    '--gb-icon-width': iconWidth,\n    '--gb-icon-height': iconHeight,\n    '--z-index' : props?.zIndex ?? 1000\n  } as React.CSSProperties;\n\n  // It tracks how to style the list based on page position\n  const uniqueId = id ?? Math.floor(Math.random() * 30000000);\n  const classId = 'rhm-gb';\n\n  let listPosition = 'left';\n  if (props?.floatButtonX && props?.floatButtonX < 50) listPosition = 'right';\n\n  return (\n    <div\n      className={`${classId}-navigation ${className}`}\n      style={{\n        ...styles?.navigation,\n        ...cssVariables,\n          right: props?.floatButtonX + 'vw',\n          top: props?.floatButtonY + 'vh',\n          position: sticky? 'fixed' : 'unset'\n      }}\n      ref={ref}\n      data-testid={'GhostButton'}\n    >\n      <input\n        type=\"checkbox\"\n        className={`${classId}-navigation__checkbox`}\n        id={`${classId}-nav-toggle-${uniqueId}`}\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n        data-testid={'GhostButton-checkbox'}\n      />\n      <label\n        htmlFor={`${classId}-nav-toggle-${uniqueId}`}\n        className={`${classId}-navigation__button`}\n        style={{\n          ...styles?.navigationButton,\n        }}\n        data-testid={'GhostButton-button'}\n      >\n        {icon ?? (\n          <span\n            className={`${classId}-navigation__icon`}\n            style={{\n              ...styles?.navigationIcon,\n            }}\n            data-testid={'GhostButton-icon'}\n          >\n            &nbsp;\n          </span>\n        )}\n        <div\n          className={`\n          ${classId}-navigation__card\n          ${classId}-navigation__card--${listPosition}\n          \n          `}\n          style={{\n            ...styles?.navigationCard,\n          }}\n          data-testid={'GhostButton-card'}\n        >\n          {children ?? (\n            <ul>\n              <li>ABOUT</li>\n              <li>PROJECTS</li>\n              <li>ELEMENTS</li>\n              <li>CONTACT</li>\n            </ul>\n          )}\n        </div>\n      </label>\n    </div>\n  );\n};\n","import React, { HTMLAttributes, ReactNode } from 'react';\nimport { amplifyString } from '../../utils';\nimport './style.css';\n\n\ninterface Styles {\n  navigation?: React.CSSProperties;\n  navigationButton?: React.CSSProperties;\n  navigationIcon?: React.CSSProperties;\n  navigationBackground?: React.CSSProperties;\n}\n\nexport interface GhostNavbarProps extends HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n  styles?: Styles;\n  className?: string;\n  id?: string;\n\n  leftReveal?: boolean;\n  rightReveal?: boolean; \n  backgroundBox?: boolean;\n  backgroundCircle?: boolean;\n  \n  floatButtonX?: number;\n  floatButtonY?: number;\n  listHoverColor?: [string, string];\n\n  iconColor?: string;\n  iconWidth?: string | number;\n  iconHeight?: string | number;\n\n  fontColor?: string;\n  fontHoverColor?: string;\n  fontSize?: string | number;\n\n  zIndex?:number\n}\n\nconst defaultStyles = {\n  floatButtonX: 90,\n  floatButtonY: 2,\n};\n\nexport const GhostNavbar = (\n  props: GhostNavbarProps = { ...defaultStyles }\n) => {\n  const { styles, children, className, id, rightReveal, backgroundBox } = props;\n\n\n  const iconWidth = amplifyString(props?.iconWidth, '2.6em', 'px');\n  const iconHeight = amplifyString(props?.iconHeight, '2px', 'px');\n  const fontSize = amplifyString(props?.fontSize, '3em', 'px');\n\n  var cssVariables = {\n    '--gn-listHoverColor-1': props?.listHoverColor?.[0] ?? 'transparent',\n    '--gn-listHoverColor-2': props?.listHoverColor?.[1] ?? '#fff',\n    '--gn-fontColor': props?.fontColor ?? 'pink',\n    '--gn-fontSize': fontSize,\n    '--gn-fontHoverColor': props?.fontHoverColor ?? 'blue',\n    '--gn-icon-color': props?.iconColor ?? 'black',\n    '--gn-icon-width': iconWidth,\n    '--gn-icon-height': iconHeight,\n    '--z-index' : props?.zIndex ?? 1000\n  } as React.CSSProperties;\n\n  const uniqueId = id ?? Math.floor(Math.random() * 30000000);\n  const floatButtonWidth = styles?.navigationButton?.width ?? '6em';\n  const floatButtonHeight = styles?.navigationButton?.height ?? '6em';\n  const classId = 'rhm-gn';\n\n  const revealType = rightReveal ? 'right-screen' : 'left-screen';\n  const backgroundType = backgroundBox ? 'square-box' : 'circle-box';\n\n  return (\n    <div\n      className={`${classId}-navigation ${className}`}\n      {...props}\n      style={{\n        ...styles?.navigation,\n        ...cssVariables,\n      }}\n      data-testid={'GhostNavbar'}\n    >\n      <input\n        type=\"checkbox\"\n        className={`${classId}-navigation__checkbox`}\n        id={`${classId}-navigation-toggle-${uniqueId}`}\n        data-testid={'GhostNavbar-checkbox'}\n      />\n      <label\n        htmlFor={`${classId}-navigation-toggle-${uniqueId}`}\n        className={`${classId}-navigation__button`}\n        style={{\n          ...styles?.navigationButton,\n          width: floatButtonWidth,\n          height: floatButtonHeight,\n          right: props?.floatButtonX + 'vw',\n          top: props?.floatButtonY + 'vh',\n        }}\n        data-testid={'GhostNavbar-button'}\n      >\n        <span\n          className={`${classId}-navigation__icon`}\n          style={styles?.navigationIcon}\n          data-testid={'GhostNavbar-icon'}\n        >\n          {' '}\n          &nbsp;\n        </span>\n      </label>\n      <div\n        className={`${classId}-navigation__background ${classId}-navigation__background--${backgroundType}`}\n        style={{\n          ...styles?.navigationBackground,\n          width: floatButtonWidth,\n          height: floatButtonHeight,\n          right: props?.floatButtonX + 'vw',\n          top: props?.floatButtonY + 'vh',\n        }}\n        data-testid={'GhostNavbar-background'}\n      >\n        &nbsp;\n      </div>\n      <nav\n        className={`${classId}-navigation__nav ${classId}-navigation__nav--${revealType}`}\n      >\n        {children ? (\n          children\n        ) : (\n          <ul>\n            <li>ABOUT</li>\n            <li>PROJECTS</li>\n            <li>ELEMENTS</li>\n            <li>CONTACT</li>\n          </ul>\n        )}\n      </nav>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useMedia = (query: string, val: number) => {\n  const [media, setMedia] = useState(false)\n  const queryStr = `(${query}: ${val}px)`;\n\n  useEffect(() => {\n    const mediaWatcher = window.matchMedia(queryStr);\n    mediaWatcher.matches ? setMedia(true) : setMedia(false);\n\n    function updateMediaWatcher(e: any) {\n      e.matches ? setMedia(true) : setMedia(false);\n    }\n    mediaWatcher.addEventListener('change', updateMediaWatcher);\n\n    return function cleanup() {\n      mediaWatcher.removeEventListener('change', updateMediaWatcher);\n    };\n  },[]);\n\n  return media\n};\n","import { useState } from 'react';\n\nexport const useToggle = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const setClose = () => setIsOpen(false);\n  const setOpen = () => setIsOpen(true);\n  const setToggle = ()=> setIsOpen((prev)=> !prev);\n\n  return {isOpen, setClose, setOpen, setToggle};\n};","import React, { HTMLAttributes, ReactNode } from 'react';\nimport { useMedia, useToggle } from '../../hooks';\nimport { amplifyString } from '../../utils';\nimport './style.css';\n\ninterface Styles {\n  navigation?: React.CSSProperties;\n  navigationBarSmall?: React.CSSProperties;\n  navigationCardSmall?: React.CSSProperties;\n  navigationButtonSmall?: React.CSSProperties;\n\n  navigationBarLarge?: React.CSSProperties;\n}\n\nexport interface ResponsiveNavbarProps extends HTMLAttributes<HTMLDivElement> {\n  children: ReactNode;\n  styles?: Styles;\n  className?: string;\n  id?: string;\n  logo?: ReactNode;\n  toggleNavigationBarSmallValue?: boolean;\n  toggleNavigationBarSmallFunction?: VoidFunction;\n  iconColor?: string;\n  iconWidth?: string | number;\n  iconHeight?: string | number;\n\n  animationDelay?: number | string;\n  zIndex?: number;\n}\n\nexport const ResponsiveNavbar = (props: ResponsiveNavbarProps) => {\n  const {\n    children,\n    styles,\n    className,\n    logo,\n    toggleNavigationBarSmallValue,\n    toggleNavigationBarSmallFunction,\n  } = props;\n\n  const { isOpen, setToggle } = useToggle();\n\n  const media = useMedia('min-width', 1000);\n\n  const classId = 'rhm-rn';\n  const uniqueId = Math.floor(Math.random() * 30000000);\n\n  const navigationCardStyle = !media\n    ? { ...styles?.navigationBarLarge, ...styles?.navigationCardSmall }\n    : { ...styles?.navigationBarLarge };\n\n  const animationDelay = amplifyString(props?.animationDelay, '0.1s', 's');\n  const iconWidth = amplifyString(props?.iconWidth, '2.6em', 'em');\n  const iconHeight = amplifyString(props?.iconHeight, '2px', 'px');\n\n  let cssVariables = {\n    '--rn-icon-color': props?.iconColor ?? 'black',\n    '--rn-icon-width': iconWidth,\n    '--rn-icon-height': iconHeight,\n    '--rn-animation-delay': animationDelay,\n    '--z-index': props?.zIndex ?? 1000,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`${classId}-navigation ${className}`}\n      style={{ ...styles?.navigation, ...cssVariables }}\n    >\n      {!media && (\n        <React.Fragment>\n          <input\n            type=\"checkbox\"\n            className={`${classId}-navigation__checkbox`}\n            id={`${classId}-navigation-toggle-${uniqueId}`}\n            checked={toggleNavigationBarSmallValue ?? isOpen}\n            onChange={toggleNavigationBarSmallFunction ?? setToggle}\n          />\n          <label\n            htmlFor={`${classId}-navigation-toggle-${uniqueId}`}\n            className={`${classId}-navigation__button`}\n            style={{\n              justifyContent: logo ? 'space-between' : 'flex-end',\n              ...styles?.navigationBarSmall,\n            }}\n          >\n            {logo && <span>{logo}</span>}\n            <span\n              className={`${classId}-navigation__icon`}\n              data-testid={'GhostNavbar-icon'}\n              style={{\n                ...styles?.navigationButtonSmall,\n              }}\n            >\n              {' '}\n              &nbsp;\n            </span>\n          </label>\n        </React.Fragment>\n      )}\n      <nav className={`${classId}-navigation__nav`} style={navigationCardStyle}>\n        {media && logo && (\n          <ul className={`${classId}-navigation__logo`}>\n            <li>{logo}</li>\n          </ul>\n        )}\n        {children ?? (\n          <ul>\n            <li>ABOUT</li>\n            <li>PROJECTS</li>\n            <li>ELEMENTS</li>\n            <li>CONTACT</li>\n          </ul>\n        )}\n      </nav>\n    </div>\n  );\n};\n"],"names":["HandleOutsideClick","ref","setChecked","useEffect","handleClickEvent","event","current","contains","target","document","addEventListener","removeEventListener","amplifyString","property","defaultV","addr","defaultStyles","floatButtonX","floatButtonY","GhostButton","props","children","styles","className","id","icon","sticky","useState","checked","useRef","iconWidth","iconHeight","fontSize","cssVariables","floatButtonSize","fontColor","listHoverColor","iconColor","zIndex","uniqueId","Math","floor","random","classId","listPosition","React","style","navigation","right","top","position","type","onChange","htmlFor","navigationButton","navigationIcon","navigationCard","GhostNavbar","rightReveal","backgroundBox","fontHoverColor","floatButtonWidth","width","floatButtonHeight","height","revealType","backgroundType","navigationBackground","useMedia","query","val","media","setMedia","queryStr","mediaWatcher","window","matchMedia","matches","updateMediaWatcher","e","cleanup","useToggle","isOpen","setIsOpen","setClose","setOpen","setToggle","prev","ResponsiveNavbar","logo","toggleNavigationBarSmallValue","toggleNavigationBarSmallFunction","navigationCardStyle","navigationBarLarge","navigationCardSmall","animationDelay","Fragment","justifyContent","navigationBarSmall","navigationButtonSmall"],"mappings":";;;;;;;;;;;;;;;;;;;SAEgBA,mBAAmBC,KAAwCC;EACzEC,SAAS,CAAC;IACR,SAASC,gBAAT,CAA0BC,KAA1B;MACE,IAAIJ,GAAG,CAACK,OAAJ,IAAe,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EACEN,UAAU,CAAC,KAAD,CAAV;;;IAGJO,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,gBAAvC;IAEA,OAAO;MACLK,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,gBAA1C;KADF;GARO,EAWN,CAACH,GAAD,CAXM,CAAT;AAYD;;ACfM,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,QAD2B,EAE3BC,QAF2B,EAG3BC,IAH2B;EAK3B,IAAIF,QAAJ,EACE,OAAO,OAAOA,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0CA,QAAQ,GAAGE,IAA5D;EAEF,OAAOD,QAAP;AACD,CATM;;ACmCP,IAAME,aAAa,GAAG;EACpBC,YAAY,EAAE,EADM;EAEpBC,YAAY,EAAE;AAFM,CAAtB;AAKA,IAAaC,WAAW,GAAG,SAAdA,WAAc,CACzBC,KADyB;;;MACzBA;IAAAA,qBAA+BJ;;;EAE/B,aAA0DI,KAA1D;MAAQC,QAAR,UAAQA,QAAR;MAAkBC,MAAlB,UAAkBA,MAAlB;MAA0BC,SAA1B,UAA0BA,SAA1B;MAAqCC,EAArC,UAAqCA,EAArC;MAAyCC,IAAzC,UAAyCA,IAAzC;MAA+CC,MAA/C,UAA+CA,MAA/C;;EAEA,gBAA8BC,QAAQ,CAAC,KAAD,CAAtC;MAAOC,OAAP;MAAgB1B,UAAhB;;EACA,IAAMD,GAAG,GAAG4B,MAAM,CAAC,IAAD,CAAlB;EAEA7B,kBAAkB,CAACC,GAAD,EAAMC,UAAN,CAAlB;EAGA,IAAM4B,SAAS,GAAGlB,aAAa,YAACQ,KAAD,qBAAC,QAAOU,SAAR,EAAmB,OAAnB,EAA4B,IAA5B,CAA/B;EACA,IAAMC,UAAU,GAAGnB,aAAa,YAACQ,KAAD,qBAAC,QAAOW,UAAR,EAAoB,KAApB,EAA2B,IAA3B,CAAhC;EACA,IAAMC,QAAQ,GAAGpB,aAAa,YAACQ,KAAD,qBAAC,QAAOY,QAAR,EAAkB,KAAlB,EAAyB,IAAzB,CAA9B;EAEA,IAAIC,YAAY,GAAG;IACjB,4DAAwBb,KAAxB,qBAAwB,QAAOc,eAA/B,oCAAkD,CADjC;IAEjB,iDAAkBd,KAAlB,qBAAkB,QAAOe,SAAzB,+BAAsC,OAFrB;IAGjB,iBAAiBH,QAHA;IAIjB,2DACAZ,KADA,qBACA,QAAOgB,cADP,oCACyB,4BALR;IAMjB,kDAAmBhB,KAAnB,qBAAmB,QAAOiB,SAA1B,+BAAuC,OANtB;IAOjB,mBAAmBP,SAPF;IAQjB,oBAAoBC,UARH;IASjB,yCAAcX,KAAd,qBAAc,QAAOkB,MAArB,4BAA+B;GATjC;;EAaA,IAAMC,QAAQ,GAAGf,EAAH,WAAGA,EAAH,GAASgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAvB;EACA,IAAMC,OAAO,GAAG,QAAhB;EAEA,IAAIC,YAAY,GAAG,MAAnB;EACA,IAAI,YAAAxB,KAAK,SAAL,aAAOH,YAAP,IAAuB,aAAAG,KAAK,SAAL,qBAAOH,YAAP,IAAsB,EAAjD,EAAqD2B,YAAY,GAAG,OAAf;EAErD,OACEC,mBAAA,MAAA;IACEtB,SAAS,EAAKoB,OAAL,oBAA2BpB;IACpCuB,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEyB,UADR,EAEAd,YAFA;MAGDe,KAAK,EAAE,aAAA5B,KAAK,SAAL,qBAAOH,YAAP,IAAsB,IAH5B;MAIDgC,GAAG,EAAE,aAAA7B,KAAK,SAAL,qBAAOF,YAAP,IAAsB,IAJ1B;MAKDgC,QAAQ,EAAExB,MAAM,GAAE,OAAF,GAAY;;IAEhCzB,GAAG,EAAEA;mBACQ;GAVf,EAYE4C,mBAAA,QAAA;IACEM,IAAI,EAAC;IACL5B,SAAS,EAAKoB,OAAL;IACTnB,EAAE,EAAKmB,OAAL,oBAA2BJ;IAC7BX,OAAO,EAAEA;IACTwB,QAAQ,EAAE;MAAA,OAAMlD,UAAU,CAAC,CAAC0B,OAAF,CAAhB;;mBACG;GANf,CAZF,EAoBEiB,mBAAA,QAAA;IACEQ,OAAO,EAAKV,OAAL,oBAA2BJ;IAClChB,SAAS,EAAKoB,OAAL;IACTG,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEgC,gBADR;mBAGQ;GANf,EAQG7B,IARH,WAQGA,IARH,GASIoB,mBAAA,OAAA;IACEtB,SAAS,EAAKoB,OAAL;IACTG,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEiC,cADR;mBAGQ;GALf,QAAA,CATJ,EAmBEV,mBAAA,MAAA;IACEtB,SAAS,mBACPoB,OADO,qCAEPA,OAFO,2BAEsBC,YAFtB;IAKTE,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEkC,cADR;mBAGQ;GATf,EAWGnC,QAXH,WAWGA,QAXH,GAYIwB,mBAAA,KAAA,MAAA,EACEA,mBAAA,KAAA,MAAA,SAAA,CADF,EAEEA,mBAAA,KAAA,MAAA,YAAA,CAFF,EAGEA,mBAAA,KAAA,MAAA,YAAA,CAHF,EAIEA,mBAAA,KAAA,MAAA,WAAA,CAJF,CAZJ,CAnBF,CApBF,CADF;AA+DD,CAjGM;;ACFP,IAAM7B,eAAa,GAAG;EACpBC,YAAY,EAAE,EADM;EAEpBC,YAAY,EAAE;AAFM,CAAtB;AAKA,IAAauC,WAAW,GAAG,SAAdA,WAAc,CACzBrC,KADyB;;;MACzBA;IAAAA,qBAA+BJ;;;EAE/B,aAAwEI,KAAxE;MAAQE,MAAR,UAAQA,MAAR;MAAgBD,QAAhB,UAAgBA,QAAhB;MAA0BE,SAA1B,UAA0BA,SAA1B;MAAqCC,EAArC,UAAqCA,EAArC;MAAyCkC,WAAzC,UAAyCA,WAAzC;MAAsDC,aAAtD,UAAsDA,aAAtD;EAGA,IAAM7B,SAAS,GAAGlB,aAAa,YAACQ,KAAD,qBAAC,QAAOU,SAAR,EAAmB,OAAnB,EAA4B,IAA5B,CAA/B;EACA,IAAMC,UAAU,GAAGnB,aAAa,YAACQ,KAAD,qBAAC,QAAOW,UAAR,EAAoB,KAApB,EAA2B,IAA3B,CAAhC;EACA,IAAMC,QAAQ,GAAGpB,aAAa,YAACQ,KAAD,qBAAC,QAAOY,QAAR,EAAkB,KAAlB,EAAyB,IAAzB,CAA9B;EAEA,IAAIC,YAAY,GAAG;IACjB,6DAAyBb,KAAzB,8CAAyB,QAAOgB,cAAhC,qBAAyB,sBAAwB,CAAxB,CAAzB,oCAAuD,aADtC;IAEjB,8DAAyBhB,KAAzB,8CAAyB,QAAOgB,cAAhC,qBAAyB,sBAAwB,CAAxB,CAAzB,qCAAuD,MAFtC;IAGjB,iDAAkBhB,KAAlB,qBAAkB,QAAOe,SAAzB,+BAAsC,MAHrB;IAIjB,iBAAiBH,QAJA;IAKjB,2DAAuBZ,KAAvB,qBAAuB,QAAOwC,cAA9B,oCAAgD,MAL/B;IAMjB,kDAAmBxC,KAAnB,qBAAmB,QAAOiB,SAA1B,+BAAuC,OANtB;IAOjB,mBAAmBP,SAPF;IAQjB,oBAAoBC,UARH;IASjB,0CAAcX,KAAd,qBAAc,SAAOkB,MAArB,4BAA+B;GATjC;EAYA,IAAMC,QAAQ,GAAGf,EAAH,WAAGA,EAAH,GAASgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAvB;EACA,IAAMmB,gBAAgB,4BAAGvC,MAAH,8CAAGA,MAAM,CAAEgC,gBAAX,qBAAG,uBAA0BQ,KAA7B,oCAAsC,KAA5D;EACA,IAAMC,iBAAiB,6BAAGzC,MAAH,8CAAGA,MAAM,CAAEgC,gBAAX,qBAAG,uBAA0BU,MAA7B,qCAAuC,KAA9D;EACA,IAAMrB,OAAO,GAAG,QAAhB;EAEA,IAAMsB,UAAU,GAAGP,WAAW,GAAG,cAAH,GAAoB,aAAlD;EACA,IAAMQ,cAAc,GAAGP,aAAa,GAAG,YAAH,GAAkB,YAAtD;EAEA,OACEd,mBAAA,MAAA;IACEtB,SAAS,EAAKoB,OAAL,oBAA2BpB;KAChCH;IACJ0B,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEyB,UADR,EAEAd,YAFA;mBAIQ;IAPf,EASEY,mBAAA,QAAA;IACEM,IAAI,EAAC;IACL5B,SAAS,EAAKoB,OAAL;IACTnB,EAAE,EAAKmB,OAAL,2BAAkCJ;mBACvB;GAJf,CATF,EAeEM,mBAAA,QAAA;IACEQ,OAAO,EAAKV,OAAL,2BAAkCJ;IACzChB,SAAS,EAAKoB,OAAL;IACTG,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAEgC,gBADR;MAEHQ,KAAK,EAAED,gBAFJ;MAGHG,MAAM,EAAED,iBAHL;MAIHf,KAAK,EAAE,aAAA5B,KAAK,SAAL,qBAAOH,YAAP,IAAsB,IAJ1B;MAKHgC,GAAG,EAAE,aAAA7B,KAAK,SAAL,qBAAOF,YAAP,IAAsB;;mBAEhB;GAVf,EAYE2B,mBAAA,OAAA;IACEtB,SAAS,EAAKoB,OAAL;IACTG,KAAK,EAAExB,MAAF,oBAAEA,MAAM,CAAEiC;mBACF;GAHf,EAKG,GALH,QAAA,CAZF,CAfF,EAoCEV,mBAAA,MAAA;IACEtB,SAAS,EAAKoB,OAAL,gCAAuCA,OAAvC,iCAA0EuB;IACnFpB,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAE6C,oBADR;MAEHL,KAAK,EAAED,gBAFJ;MAGHG,MAAM,EAAED,iBAHL;MAIHf,KAAK,EAAE,aAAA5B,KAAK,SAAL,qBAAOH,YAAP,IAAsB,IAJ1B;MAKHgC,GAAG,EAAE,aAAA7B,KAAK,SAAL,qBAAOF,YAAP,IAAsB;;mBAEhB;GATf,QAAA,CApCF,EAiDE2B,mBAAA,MAAA;IACEtB,SAAS,EAAKoB,OAAL,yBAAgCA,OAAhC,0BAA4DsB;GADvE,EAGG5C,QAAQ,GACPA,QADO,GAGPwB,mBAAA,KAAA,MAAA,EACEA,mBAAA,KAAA,MAAA,SAAA,CADF,EAEEA,mBAAA,KAAA,MAAA,YAAA,CAFF,EAGEA,mBAAA,KAAA,MAAA,YAAA,CAHF,EAIEA,mBAAA,KAAA,MAAA,WAAA,CAJF,CANJ,CAjDF,CADF;AAkED,CAhGM;;ACzCA,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAgBC,GAAhB;EACtB,gBAA0B3C,QAAQ,CAAC,KAAD,CAAlC;MAAO4C,KAAP;MAAcC,QAAd;;EACA,IAAMC,QAAQ,SAAOJ,KAAP,UAAiBC,GAAjB,QAAd;EAEAnE,SAAS,CAAC;IACR,IAAMuE,YAAY,GAAGC,MAAM,CAACC,UAAP,CAAkBH,QAAlB,CAArB;IACAC,YAAY,CAACG,OAAb,GAAuBL,QAAQ,CAAC,IAAD,CAA/B,GAAwCA,QAAQ,CAAC,KAAD,CAAhD;;IAEA,SAASM,kBAAT,CAA4BC,CAA5B;MACEA,CAAC,CAACF,OAAF,GAAYL,QAAQ,CAAC,IAAD,CAApB,GAA6BA,QAAQ,CAAC,KAAD,CAArC;;;IAEFE,YAAY,CAAChE,gBAAb,CAA8B,QAA9B,EAAwCoE,kBAAxC;IAEA,OAAO,SAASE,OAAT;MACLN,YAAY,CAAC/D,mBAAb,CAAiC,QAAjC,EAA2CmE,kBAA3C;KADF;GATO,EAYP,EAZO,CAAT;EAcA,OAAOP,KAAP;AACD,CAnBM;;ACAA,IAAMU,SAAS,GAAG,SAAZA,SAAY;EACvB,gBAA4BtD,QAAQ,CAAC,KAAD,CAApC;MAAOuD,MAAP;MAAeC,SAAf;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;IAAA,OAAMD,SAAS,CAAC,KAAD,CAAf;GAAjB;;EACA,IAAME,OAAO,GAAG,SAAVA,OAAU;IAAA,OAAMF,SAAS,CAAC,IAAD,CAAf;GAAhB;;EACA,IAAMG,SAAS,GAAG,SAAZA,SAAY;IAAA,OAAKH,SAAS,CAAC,UAACI,IAAD;MAAA,OAAS,CAACA,IAAV;KAAD,CAAd;GAAlB;;EAEA,OAAO;IAACL,MAAM,EAANA,MAAD;IAASE,QAAQ,EAARA,QAAT;IAAmBC,OAAO,EAAPA,OAAnB;IAA4BC,SAAS,EAATA;GAAnC;AACD,CARM;;IC4BME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpE,KAAD;;;EAC9B,IACEC,QADF,GAOID,KAPJ,CACEC,QADF;MAEEC,MAFF,GAOIF,KAPJ,CAEEE,MAFF;MAGEC,SAHF,GAOIH,KAPJ,CAGEG,SAHF;MAIEkE,IAJF,GAOIrE,KAPJ,CAIEqE,IAJF;MAKEC,6BALF,GAOItE,KAPJ,CAKEsE,6BALF;MAMEC,gCANF,GAOIvE,KAPJ,CAMEuE,gCANF;;EASA,iBAA8BV,SAAS,EAAvC;MAAQC,MAAR,cAAQA,MAAR;MAAgBI,SAAhB,cAAgBA,SAAhB;;EAEA,IAAMf,KAAK,GAAGH,QAAQ,CAAC,WAAD,EAAc,IAAd,CAAtB;EAEA,IAAMzB,OAAO,GAAG,QAAhB;EACA,IAAMJ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAjB;EAEA,IAAMkD,mBAAmB,GAAG,CAACrB,KAAD,gBACnBjD,MADmB,oBACnBA,MAAM,CAAEuE,kBADW,EACYvE,MADZ,oBACYA,MAAM,CAAEwE,mBADpB,iBAEnBxE,MAFmB,oBAEnBA,MAAM,CAAEuE,kBAFW,CAA5B;EAIA,IAAME,cAAc,GAAGnF,aAAa,CAACQ,KAAD,oBAACA,KAAK,CAAE2E,cAAR,EAAwB,MAAxB,EAAgC,GAAhC,CAApC;EACA,IAAMjE,SAAS,GAAGlB,aAAa,CAACQ,KAAD,oBAACA,KAAK,CAAEU,SAAR,EAAmB,OAAnB,EAA4B,IAA5B,CAA/B;EACA,IAAMC,UAAU,GAAGnB,aAAa,CAACQ,KAAD,oBAACA,KAAK,CAAEW,UAAR,EAAoB,KAApB,EAA2B,IAA3B,CAAhC;EAEA,IAAIE,YAAY,GAAG;IACjB,uCAAmBb,KAAnB,oBAAmBA,KAAK,CAAEiB,SAA1B,+BAAuC,OADtB;IAEjB,mBAAmBP,SAFF;IAGjB,oBAAoBC,UAHH;IAIjB,wBAAwBgE,cAJP;IAKjB,8BAAa3E,KAAb,oBAAaA,KAAK,CAAEkB,MAApB,4BAA8B;GALhC;EAQA,OACEO,mBAAA,MAAA;IACEtB,SAAS,EAAKoB,OAAL,oBAA2BpB;IACpCuB,KAAK,eAAOxB,MAAP,oBAAOA,MAAM,CAAEyB,UAAf,EAA8Bd,YAA9B;GAFP,EAIG,CAACsC,KAAD,IACC1B,mBAAA,CAACA,KAAK,CAACmD,QAAP,MAAA,EACEnD,mBAAA,QAAA;IACEM,IAAI,EAAC;IACL5B,SAAS,EAAKoB,OAAL;IACTnB,EAAE,EAAKmB,OAAL,2BAAkCJ;IACpCX,OAAO,EAAE8D,6BAAF,WAAEA,6BAAF,GAAmCR;IAC1C9B,QAAQ,EAAEuC,gCAAF,WAAEA,gCAAF,GAAsCL;GALhD,CADF,EAQEzC,mBAAA,QAAA;IACEQ,OAAO,EAAKV,OAAL,2BAAkCJ;IACzChB,SAAS,EAAKoB,OAAL;IACTG,KAAK;MACHmD,cAAc,EAAER,IAAI,GAAG,eAAH,GAAqB;OACtCnE,MAFA,oBAEAA,MAAM,CAAE4E,kBAFR;GAHP,EAQGT,IAAI,IAAI5C,mBAAA,OAAA,MAAA,EAAO4C,IAAP,CARX,EASE5C,mBAAA,OAAA;IACEtB,SAAS,EAAKoB,OAAL;mBACI;IACbG,KAAK,eACAxB,MADA,oBACAA,MAAM,CAAE6E,qBADR;GAHP,EAOG,GAPH,QAAA,CATF,CARF,CALJ,EAmCEtD,mBAAA,MAAA;IAAKtB,SAAS,EAAKoB,OAAL;IAAgCG,KAAK,EAAE8C;GAArD,EACGrB,KAAK,IAAIkB,IAAT,IACC5C,mBAAA,KAAA;IAAItB,SAAS,EAAKoB,OAAL;GAAb,EACEE,mBAAA,KAAA,MAAA,EAAK4C,IAAL,CADF,CAFJ,EAMGpE,QANH,WAMGA,QANH,GAOIwB,mBAAA,KAAA,MAAA,EACEA,mBAAA,KAAA,MAAA,SAAA,CADF,EAEEA,mBAAA,KAAA,MAAA,YAAA,CAFF,EAGEA,mBAAA,KAAA,MAAA,YAAA,CAHF,EAIEA,mBAAA,KAAA,MAAA,WAAA,CAJF,CAPJ,CAnCF,CADF;AAqDD,CAtFM;;;;"}